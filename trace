Standard ML of New Jersey v110.67 [built: Sun Oct 19 18:04:19 2008]
- [opening Main.sml]
val PROLOG_FILE = "Prolog.sml" : string
val EXPORT_ML = false : bool
val EXEC_FILE = "pml" : string
val MLTOOL_DIR = "/usr/lib/smlnj/lib" : string
val MLYACC_DIR = "/usr/lib/smlnj/ml-yacc" : string
[opening /usr/lib/smlnj/ml-yacc/base.sig]
signature STREAM =
  sig
    type 'a stream
    val streamify : (unit -> 'a) -> 'a stream
    val cons : 'a * 'a stream -> 'a stream
    val get : 'a stream -> 'a * 'a stream
  end
signature LR_TABLE =
  sig
    datatype ('a,'b) pairlist = EMPTY | PAIR of 'a * 'b * ('a,'b) pairlist
    datatype state = STATE of int
    datatype term = T of int
    datatype nonterm = NT of int
    datatype action = ACCEPT | ERROR | REDUCE of int | SHIFT of state
    type table
    val numStates : table -> int
    val numRules : table -> int
    val describeActions : table -> state -> (term,action) pairlist * action
    val describeGoto : table -> state -> (nonterm,state) pairlist
    val action : table -> state * term -> action
    val goto : table -> state * nonterm -> state
    val initialState : table -> state
    exception Goto of state * nonterm
    val mkLrTable : {actions:((term,action) pairlist * action) array,
                     gotos:(nonterm,state) pairlist array, initialState:state,
                     numRules:int, numStates:int}
                    -> table
  end
signature TOKEN =
  sig
    structure LrTable :
      sig
        datatype ('a,'b) pairlist = EMPTY | PAIR of 'a * 'b * ('a,'b) pairlist
        datatype state = STATE of int
        datatype term = T of int
        datatype nonterm = NT of int
        datatype action = ACCEPT | ERROR | REDUCE of int | SHIFT of state
        type table
        val numStates : table -> int
        val numRules : table -> int
        val describeActions : table
                              -> state -> (term,action) pairlist * action
        val describeGoto : table -> state -> (nonterm,state) pairlist
        val action : table -> state * term -> action
        val goto : table -> state * nonterm -> state
        val initialState : table -> state
        exception Goto of state * nonterm
        val mkLrTable : {actions:((term,action) pairlist * action) array,
                         gotos:(nonterm,state) pairlist array,
                         initialState:state, numRules:int, numStates:int}
                        -> table
      end
    datatype ('a,'b) token = TOKEN of LrTable.term * ('a * 'b * 'b)
    val sameToken : ('a,'b) token * ('a,'b) token -> bool
  end
signature LR_PARSER =
  sig
    structure Stream :
      sig
        type 'a stream
        val streamify : (unit -> 'a) -> 'a stream
        val cons : 'a * 'a stream -> 'a stream
        val get : 'a stream -> 'a * 'a stream
      end
    structure LrTable :
      sig
        datatype ('a,'b) pairlist = EMPTY | PAIR of 'a * 'b * ('a,'b) pairlist
        datatype state = STATE of int
        datatype term = T of int
        datatype nonterm = NT of int
        datatype action = ACCEPT | ERROR | REDUCE of int | SHIFT of state
        type table
        val numStates : table -> int
        val numRules : table -> int
        val describeActions : table
                              -> state -> (term,action) pairlist * action
        val describeGoto : table -> state -> (nonterm,state) pairlist
        val action : table -> state * term -> action
        val goto : table -> state * nonterm -> state
        val initialState : table -> state
        exception Goto of state * nonterm
        val mkLrTable : {actions:((term,action) pairlist * action) array,
                         gotos:(nonterm,state) pairlist array,
                         initialState:state, numRules:int, numStates:int}
                        -> table
      end
    structure Token :
      sig
        structure LrTable : <sig>
        datatype ('a,'b) token = TOKEN of LrTable.term * ('a * 'b * 'b)
        val sameToken : ('a,'b) token * ('a,'b) token -> bool
      end
    exception ParseError
    val parse : {arg:'a,
                 ec:{error:string * 'c * 'c -> unit,
                     errtermvalue:LrTable.term -> 'b,
                     is_keyword:LrTable.term -> bool,
                     noShift:LrTable.term -> bool,
                     preferred_change:(LrTable.term list * LrTable.term list) 
                                        list,
                     showTerminal:LrTable.term -> string,
                     terms:LrTable.term list},
                 lexer:('b,'c) Token.token Stream.stream, lookahead:int,
                 saction:int * 'c * (LrTable.state * ('b * 'c * 'c)) list * 'a
                         -> LrTable.nonterm * ('b * 'c * 'c) * 
                            (LrTable.state * ('b * 'c * 'c)) list,
                 table:LrTable.table, void:'b}
                -> 'b * ('b,'c) Token.token Stream.stream
    sharing Token.LrTable = LrTable
  end
signature LEXER =
  sig
    structure UserDeclarations :
      sig
        type ('a,'b) token
        type pos
        type svalue
      end
    val makeLexer : (int -> string)
                    -> unit
                       -> (UserDeclarations.svalue,UserDeclarations.pos) 
                            UserDeclarations.token
  end
signature ARG_LEXER =
  sig
    structure UserDeclarations :
      sig
        type ('a,'b) token
        type pos
        type svalue
        type arg
      end
    val makeLexer : (int -> string)
                    -> UserDeclarations.arg
                       -> unit
                          -> (UserDeclarations.svalue,UserDeclarations.pos) 
                               UserDeclarations.token
  end
signature PARSER_DATA =
  sig
    type pos
    type svalue
    type arg
    type result
    structure LrTable :
      sig
        datatype ('a,'b) pairlist = EMPTY | PAIR of 'a * 'b * ('a,'b) pairlist
        datatype state = STATE of int
        datatype term = T of int
        datatype nonterm = NT of int
        datatype action = ACCEPT | ERROR | REDUCE of int | SHIFT of state
        type table
        val numStates : table -> int
        val numRules : table -> int
        val describeActions : table
                              -> state -> (term,action) pairlist * action
        val describeGoto : table -> state -> (nonterm,state) pairlist
        val action : table -> state * term -> action
        val goto : table -> state * nonterm -> state
        val initialState : table -> state
        exception Goto of state * nonterm
        val mkLrTable : {actions:((term,action) pairlist * action) array,
                         gotos:(nonterm,state) pairlist array,
                         initialState:state, numRules:int, numStates:int}
                        -> table
      end
    structure Token :
      sig
        structure LrTable : <sig>
        datatype ('a,'b) token = TOKEN of LrTable.term * ('a * 'b * 'b)
        val sameToken : ('a,'b) token * ('a,'b) token -> bool
      end
    structure Actions :
      sig
        val actions : int * pos * (LrTable.state * (svalue * pos * pos)) list
                      * arg
                      -> LrTable.nonterm * (svalue * pos * pos) * 
                         (LrTable.state * (svalue * pos * pos)) list
        val void : svalue
        val extract : svalue -> result
      end
    structure EC :
      sig
        val is_keyword : LrTable.term -> bool
        val noShift : LrTable.term -> bool
        val preferred_change : (LrTable.term list * LrTable.term list) list
        val errtermvalue : LrTable.term -> svalue
        val showTerminal : LrTable.term -> string
        val terms : LrTable.term list
      end
    val table : LrTable.table
    sharing LrTable = Token.LrTable
  end
signature PARSER =
  sig
    structure Token :
      sig
        structure LrTable : <sig>
        datatype ('a,'b) token = TOKEN of LrTable.term * ('a * 'b * 'b)
        val sameToken : ('a,'b) token * ('a,'b) token -> bool
      end
    structure Stream :
      sig
        type 'a stream
        val streamify : (unit -> 'a) -> 'a stream
        val cons : 'a * 'a stream -> 'a stream
        val get : 'a stream -> 'a * 'a stream
      end
    exception ParseError
    type pos
    type result
    type arg
    type svalue
    val makeLexer : (int -> string) -> (svalue,pos) Token.token Stream.stream
    val parse : int * (svalue,pos) Token.token Stream.stream * 
                (string * pos * pos -> unit) * arg
                -> result * (svalue,pos) Token.token Stream.stream
    val sameToken : (svalue,pos) Token.token * (svalue,pos) Token.token
                    -> bool
  end
signature ARG_PARSER =
  sig
    structure Token :
      sig
        structure LrTable : <sig>
        datatype ('a,'b) token = TOKEN of LrTable.term * ('a * 'b * 'b)
        val sameToken : ('a,'b) token * ('a,'b) token -> bool
      end
    structure Stream :
      sig
        type 'a stream
        val streamify : (unit -> 'a) -> 'a stream
        val cons : 'a * 'a stream -> 'a stream
        val get : 'a stream -> 'a * 'a stream
      end
    exception ParseError
    type arg
    type lexarg
    type pos
    type result
    type svalue
    val makeLexer : (int -> string)
                    -> lexarg -> (svalue,pos) Token.token Stream.stream
    val parse : int * (svalue,pos) Token.token Stream.stream * 
                (string * pos * pos -> unit) * arg
                -> result * (svalue,pos) Token.token Stream.stream
    val sameToken : (svalue,pos) Token.token * (svalue,pos) Token.token
                    -> bool
  end
val it = () : unit
[opening /usr/lib/smlnj/ml-yacc/join.sml]
functor Join(<param>: sig
                        structure Lex : <sig>
                        structure ParserData : <sig>
                        structure LrParser : <sig>
                        sharing LrParser.Token = ParserData.Token
                        sharing LrParser.LrTable = ParserData.LrTable
                        sharing type ParserData.Token.token = 
                                     Lex.UserDeclarations.token
                        sharing type ParserData.pos = Lex.UserDeclarations.pos
                        sharing type ParserData.svalue = 
                                     Lex.UserDeclarations.svalue
                      end) :
            sig
              structure Token : <sig>
              structure Stream : <sig>
              exception ParseError
              type pos
              type result
              type arg
              type svalue
              val makeLexer : (int -> string)
                              -> (svalue,pos) Token.token Stream.stream
              val parse : int * (svalue,pos) Token.token Stream.stream * 
                          (string * pos * pos -> unit) * arg
                          -> result * (svalue,pos) Token.token Stream.stream
              val sameToken : (svalue,pos) Token.token * 
                              (svalue,pos) Token.token
                              -> bool
            end
functor JoinWithArg(<param>: sig
                               structure Lex : <sig>
                               structure ParserData : <sig>
                               structure LrParser : <sig>
                               sharing LrParser.Token = ParserData.Token
                               sharing LrParser.LrTable = ParserData.LrTable
                               sharing type ParserData.Token.token = 
                                            Lex.UserDeclarations.token
                               sharing type ParserData.pos = 
                                            Lex.UserDeclarations.pos
                               sharing type ParserData.svalue = 
                                            Lex.UserDeclarations.svalue
                             end) :
                   sig
                     structure Token : <sig>
                     structure Stream : <sig>
                     exception ParseError
                     type arg
                     type lexarg
                     type pos
                     type result
                     type svalue
                     val makeLexer : (int -> string)
                                     -> lexarg
                                        -> (svalue,pos) Token.token 
                                             Stream.stream
                     val parse : int * (svalue,pos) Token.token Stream.stream
                                 * (string * pos * pos -> unit) * arg
                                 -> result * 
                                    (svalue,pos) Token.token Stream.stream
                     val sameToken : (svalue,pos) Token.token * 
                                     (svalue,pos) Token.token
                                     -> bool
                   end
val it = () : unit
[opening /usr/lib/smlnj/ml-yacc/lrtable.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[autoloading done]
structure LrTable : LR_TABLE
val it = () : unit
[opening /usr/lib/smlnj/ml-yacc/stream.sml]
structure Stream : STREAM
val it = () : unit
[opening /usr/lib/smlnj/ml-yacc/parser2.sml]
[autoloading]
[autoloading done]
signature FIFO =
  sig
    type 'a queue
    val empty : 'a queue
    exception Empty
    val get : 'a queue -> 'a * 'a queue
    val put : 'a * 'a queue -> 'a queue
  end
structure LrParser : LR_PARSER
val it = () : unit
[opening Syntax.sig]
signature SYNTAX =
  sig
    datatype Term = Fun of string * Term list | Var of string * int
    datatype HornClause = Headed of Term * Term list | Headless of Term list
    val db : HornClause list ref
    val PrintTerm : Term -> string
    val PrintClause : HornClause -> string
    val PrintList : Term list -> string
    val PrintDB : HornClause list -> string
    val OutLine : string -> unit
    val OutSol : (Term * Term) list -> unit
    val InitDB : unit -> unit
    val Assert : HornClause -> unit
  end
val it = () : unit
[opening Syntax.sml]
structure Syntax : SYNTAX
val it = () : unit
[opening Prolog.grm.sig]
signature Prolog_TOKENS =
  sig
    type ('a,'b) token
    type svalue
    val VAR : string * 'a * 'a -> (svalue,'a) token
    val ID : string * 'a * 'a -> (svalue,'a) token
    val UNDER : 'a * 'a -> (svalue,'a) token
    val LBRCKT : 'a * 'a -> (svalue,'a) token
    val RBRCKT : 'a * 'a -> (svalue,'a) token
    val BAR : 'a * 'a -> (svalue,'a) token
    val LPAREN : 'a * 'a -> (svalue,'a) token
    val RPAREN : 'a * 'a -> (svalue,'a) token
    val QUEST : 'a * 'a -> (svalue,'a) token
    val COMMA : 'a * 'a -> (svalue,'a) token
    val DOT : 'a * 'a -> (svalue,'a) token
    val TS : 'a * 'a -> (svalue,'a) token
    val CUT : 'a * 'a -> (svalue,'a) token
    val FAIL : 'a * 'a -> (svalue,'a) token
    val EOF : 'a * 'a -> (svalue,'a) token
  end
signature Prolog_LRVALS =
  sig
    structure Tokens :
      sig
        type ('a,'b) token
        type svalue
        val VAR : string * 'a * 'a -> (svalue,'a) token
        val ID : string * 'a * 'a -> (svalue,'a) token
        val UNDER : 'a * 'a -> (svalue,'a) token
        val LBRCKT : 'a * 'a -> (svalue,'a) token
        val RBRCKT : 'a * 'a -> (svalue,'a) token
        val BAR : 'a * 'a -> (svalue,'a) token
        val LPAREN : 'a * 'a -> (svalue,'a) token
        val RPAREN : 'a * 'a -> (svalue,'a) token
        val QUEST : 'a * 'a -> (svalue,'a) token
        val COMMA : 'a * 'a -> (svalue,'a) token
        val DOT : 'a * 'a -> (svalue,'a) token
        val TS : 'a * 'a -> (svalue,'a) token
        val CUT : 'a * 'a -> (svalue,'a) token
        val FAIL : 'a * 'a -> (svalue,'a) token
        val EOF : 'a * 'a -> (svalue,'a) token
      end
    structure ParserData :
      sig
        type pos
        type svalue
        type arg
        type result
        structure LrTable : <sig>
        structure Token : <sig>
        structure Actions : <sig>
        structure EC : <sig>
        val table : LrTable.table
        sharing LrTable = Token.LrTable
      end
    sharing type Tokens.svalue = ParserData.svalue
    sharing type Tokens.token = ParserData.Token.token
  end
val it = () : unit
[opening Prolog.grm.sml]
[autoloading]
[autoloading done]
functor PrologLrValsFun(<param>: sig
                                   structure Token : <sig>
                                   structure Syntax : <sig>
                                 end) :
                       sig
                         structure Tokens : <sig>
                         structure ParserData : <sig>
                         sharing type Tokens.svalue = ParserData.svalue
                         sharing type Tokens.token = ParserData.Token.token
                       end
val it = () : unit
[opening Prolog.lex.sml]
[autoloading]
[autoloading done]
functor PrologLex(<param>: sig
                             structure Tokens : <sig>
                           end) :
                 sig
                   structure UserDeclarations : <sig>
                   exception LexError
                   structure Internal : <sig>
                   val makeLexer : (int -> string) -> unit -> Internal.result
                 end
val it = () : unit
[opening Parser.sml]
structure PrologLrVals : Prolog_LRVALS
structure PrologLex :
  sig
    structure UserDeclarations : <sig>
    exception LexError
    structure Internal : <sig>
    val makeLexer : (int -> string) -> unit -> Internal.result
  end
structure PrologParser : PARSER
val parse = fn : string -> PrologParser.result
val parseFile = fn : string -> PrologParser.result
val it = () : unit
opening Syntax
  datatype Term = Fun of string * Term list | Var of string * int
  datatype HornClause = Headed of Term * Term list | Headless of Term list
  val db : HornClause list ref
  val PrintTerm : Term -> string
  val PrintClause : HornClause -> string
  val PrintList : Term list -> string
  val PrintDB : HornClause list -> string
  val OutLine : string -> unit
  val OutSol : (Term * Term) list -> unit
  val InitDB : unit -> unit
  val Assert : HornClause -> unit
[opening Prolog.sml]
val termlist = ref [] : (Term * Term) list ref
val AddTerm = fn : 'a * 'a list ref -> unit
val CleanTL = fn : 'a list ref -> unit
type Substitution = string * int -> Term
val empty = fn : Substitution
Prolog.sml:10.5-10.73 Warning: match nonexhaustive
          Var (a,b) => ...
  
val addone = fn : Term -> Term
val value = fn : (string * int -> Term) -> Term -> Term
val comp = fn : (string * int -> Term) * ('a -> Term) -> 'a -> Term
val upd = fn : (string * int) * Term -> ('a -> Term) -> 'a -> Term
Prolog.sml:17.5-28.10 Warning: match nonexhaustive
          (Var v :: at,bh :: bt) => ...
          (Fun (v,args) :: at,bh :: bt) => ...
  
val upd'' = fn : Term list * Term list -> string * int -> Term
Prolog.sml:30.5-31.87 Warning: match nonexhaustive
          (t1 as Fun (f,args1),t2 as Fun (y,args2)) => ...
  
val upd' = fn : Term * Term -> Substitution
val LevelUp = fn : Term * int -> Term
exception non_unifiable
exception solved
exception qsolved
exception occurs_check
exception length
exception next_in_list
exception non_solvable
val top = fn : (string * int -> Term) -> Term -> Term
val pairup = fn : 'a list * 'b list -> ('a * 'b) list
val occurs = fn : string * int -> Term -> bool
val unify' = fn
  : (Term * Term) * (string * int -> Term) -> string * int -> Term
Prolog.sml:58.5-66.8 Warning: match nonexhaustive
          (t1,t2,level,nil) => ...
  
val unify = fn : Term * Term * int * 'a list -> string * int -> Term
val Search = fn : Term * (Term * Term) list -> bool
Prolog.sml:70.5-82.39 Warning: match nonexhaustive
          (xh :: xt,zh :: zt) => ...
  
val P3 = fn : Term list * Term list -> unit
Prolog.sml:83.5-83.52 Warning: match nonexhaustive
          (Fun (x,xlist),Fun (z,zlist)) => ...
  
val P2 = fn : Term * Term -> unit
val P1 = fn : Term * (string * int -> Term) -> unit
Prolog.sml:86.5-86.66 Warning: match nonexhaustive
          (Fun (f,_),Fun (g,_)) => ...
  
val yheadcheck = fn : Term * Term -> bool
Prolog.sml:87.5-87.133 Warning: match nonexhaustive
          (term,yh :: yt) => ...
  
val checker = fn : Term * Term list -> bool
Prolog.sml:90.5-160.3 Warning: match nonexhaustive
          (y as yhead :: ytail,Headed (hch,nil) :: dbtail,database,querylist,
           counter,level) => ...
          (y as yhead :: ytail,Headed (hch,hct) :: dbtail,database,querylist,
           counter,level) => ...
  
val Solver = fn
  : Term list * HornClause list * HornClause list * 'a * 'b * int
    -> string * int -> Term
Prolog.sml:165.5-168.3 Warning: match nonexhaustive
          (yhead :: ytail,S) => ...
  
val Print = fn : Term list * (string * int -> Term) -> unit
Prolog.sml:170.5-177.4 Warning: match nonexhaustive
          (y as yhead :: ytail,database as dbh :: dbt) => ...
  
val OutQuery = fn : Term list * HornClause list -> unit
val Prolog = fn : HornClause -> unit
val it = () : unit
[opening TopLevel.sml]
[autoloading]
[autoloading done]
structure TopLevel :
  sig
    val prolog : unit -> unit
    val main : 'a * 'b -> OS.Process.status
  end
val it = () : unit
[autoloading]
[autoloading done]
val it = () : unit
opening TopLevel
  val prolog : unit -> unit
  val main : 'a * 'b -> OS.Process.status
val it = () : unit
- PROLOG> assert:  father(fred,rocky).
PROLOG> assert:  father(fred,dino).
PROLOG> assert:  father(fred,pebbles).
PROLOG> assert:  father(barney,bambam).
PROLOG> assert:  father(bambam,scooby).
PROLOG> assert:  father(bambam,shaggy).
PROLOG> assert:  father(rocky,dafney).
PROLOG> assert:  mother(wilma,pebbles).
PROLOG> assert:  mother(wilma,dino).
PROLOG> assert:  mother(wilma,rocky).
PROLOG> assert:  mother(betty,bambam).
PROLOG> assert:  mother(pebbles,shaggy).
PROLOG> assert:  mother(pebbles,scooby).
PROLOG> assert:  mother(wednesday,dafney).
PROLOG> assert:  male(fred).
PROLOG> assert:  male(barney).
PROLOG> assert:  male(bambam).
PROLOG> assert:  male(rocky).
PROLOG> assert:  male(dino).
PROLOG> assert:  male(shaggy).
PROLOG> assert:  male(scooby).
PROLOG> assert:  female(wilma).
PROLOG> assert:  female(betty).
PROLOG> assert:  female(pebbles).
PROLOG> assert:  female(wednesday).
PROLOG> assert:  female(dafney).
PROLOG> assert:  parent(X,Y) :- father(X,Y).
PROLOG> assert:  parent(X,Y) :- mother(X,Y).
PROLOG> assert:  sibling(X,Y) :- mother(Z,X),mother(Z,Y).
PROLOG> assert:  aunt(X,Y) :- female(X),sibling(X,Z),parent(Z,Y).
PROLOG> assert:  uncle(X,Y) :- male(X),sibling(X,Z),parent(Z,Y).
PROLOG> assert:  cousin(X,Y) :- mother(Z,X),aunt(Z,Y).
PROLOG> assert:  cousin(X,Y) :- father(Z,X),uncle(Z,Y).
PROLOG> assert:  ances(X,Y) :- parent(X,Y).
PROLOG> assert:  ances(X,Y) :- parent(X,Z),ances(Z,Y).
PROLOG> query:  uncle(dino,scooby)?
Trying to call unify on factuncle(dino,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factuncle(dino,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleuncle(dino,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on ruleuncle(dino,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on ruleuncle(dino,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on ruleuncle(dino,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on ruleuncle(dino,scooby)|uncle(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and dino
Comp called
Unify was successful for uncle(X,Y) and uncle(dino,scooby)::NIL
upd' called for uncle(X,Y):uncle(dino,scooby)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        uncle(dino,scooby)
|Our Rule:uncle(X,Y) :- male(X),sibling(X,Z),parent(Z,Y).
|After Applicationuncle(dino,scooby):-male(dino),sibling(dino,Z),parent(Z,scooby)
yheadchecking uncle(dino,scooby) uncle(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmale(dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmale(dino)|male(dino)
Unify was successful for male(dino) and male(dino)::NIL
upd' called for male(dino):male(dino)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           male(dino)
|Fact :           male(dino)
|Fact after Subst:male(dino)
|List of Facts Remainingsibling(dino,Z),parent(Z,scooby)
|After substitutions:sibling(dino,Z),parent(Z,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, male(dino)  sibling(dino,Z)
Trying to call unify on factsibling(dino,Z)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(wednesday)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(wednesday) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(pebbles)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(pebbles) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(wednesday)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(wednesday) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(betty)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(betty) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(wednesday)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(wednesday) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(pebbles)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(pebbles) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(wednesday)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(wednesday) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
Comp called
Comp called
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(wilma)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(wilma) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(wednesday)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(wednesday) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(pebbles)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(pebbles) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(wednesday)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(wednesday) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(betty)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(betty) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(wednesday)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(wednesday) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(pebbles)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(pebbles) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(wednesday)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(wednesday) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
Comp called
Comp called
Comp called
Comp called
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           male(scooby)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that male(scooby) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(wednesday)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(wednesday) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(pebbles)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(pebbles) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(wednesday)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(wednesday) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(betty)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(betty) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(wednesday)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(wednesday) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(dafney)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(dafney) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,pebbles)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,pebbles)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,pebbles)|mother(wilma,pebbles)
Unify was successful for mother(wilma,pebbles) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,pebbles):mother(wilma,pebbles)
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(bambam,scooby)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(barney,bambam)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,dino)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,pebbles)
|Fact :           father(fred,rocky)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
Comp called
Comp called
This means our rule was successful(yay)
Our rule needs to be able fill in any query blanks
Query:           sibling(dino,Z)
After Solve:     sibling(dino,pebbles)
upd' called for sibling(dino,Z):sibling(dino,pebbles)
Attempting to re-pair Z and pebbles
Upd called for Z and pebbles
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- mother(X,Y).
|After Applicationparent(X,Y):-mother(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(X,Y):-father(X,Y)
yheadchecking sibling(dino,Z) parent(X,Y)
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           sibling(dino,Z)
|Fact :           female(pebbles)
|Fact after Subst:sibling(dino,pebbles)
|List of Facts Remainingparent(Z,scooby)
|After substitutions:parent(pebbles,scooby)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, sibling(dino,Z)  parent(Z,scooby)
Trying to call unify on factparent(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factparent(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on ruleparent(pebbles,scooby)|parent(X,Y)
Upd called for Y and scooby
Comp called
Upd called for X and pebbles
Comp called
Unify was successful for parent(X,Y) and parent(pebbles,scooby)::NIL
upd' called for parent(X,Y):parent(pebbles,scooby)
Attempting to re-pair X and pebbles
Upd called for X and pebbles
Comp called
Comp called
Attempting to re-pair Y and scooby
Upd called for Y and scooby
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        parent(pebbles,scooby)
|Our Rule:parent(X,Y) :- father(X,Y).
|After Applicationparent(pebbles,scooby):-father(pebbles,scooby)
yheadchecking parent(pebbles,scooby) parent(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factfather(pebbles,scooby)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wilma,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(betty,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(pebbles,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|mother(wednesday,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(fred)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(barney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|male(scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wilma)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(betty)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factfather(pebbles,scooby)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
THIS GOT CALLED
2Trying to call unify on rulefather(pebbles,scooby)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|sibling(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|aunt(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|uncle(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|cousin(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulefather(pebbles,scooby)|ances(X,Y)
This query could not be unified with the current settings and is therefore not solvable (rule)
Something went wrong. No matter - this just means that female(pebbles) is not the best fit for sibling(dino,Z)
We're going to try again with the rest of the tail! (As long as there is still more tail
Trying to call unify on factsibling(dino,Z)|female(wednesday)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factsibling(dino,Z)|female(dafney)
Still trying to unify this query -- Moving to the next thing in the database
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|parent(X,Y)
Still trying to unify this query -- moving to the next thing in the database(rule)
2Trying to call unify on rulesibling(dino,Z)|sibling(X,Y)
Upd called for Y and Z
Comp called
Upd called for X and dino
Comp called
Unify was successful for sibling(X,Y) and sibling(dino,Z)::NIL
Leveling up Z to _Z2
upd' called for sibling(X,Y):sibling(dino,_Z2)
Attempting to re-pair X and dino
Upd called for X and dino
Comp called
Comp called
Attempting to re-pair Y and _Z2
Upd called for Y and _Z2
Comp called
Comp called
Comp called
Comp called
|~~~We've discovered a rule!~~~
|Fun facts:                    
|Our variables:        sibling(dino,Z)
|Our Rule:sibling(X,Y) :- mother(Z,X),mother(Z,Y).
|After Applicationsibling(dino,_Z2):-mother(Z,dino),mother(Z,_Z2)
yheadchecking sibling(dino,Z) sibling(X,Y)
We are going to attempt to solve the tail of the rule
Output will be a successful substitution (hopefully)
Trying to call unify on factmother(Z,dino)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(Z,dino)|mother(wilma,dino)
Upd called for Z and wilma
Comp called
Unify was successful for mother(Z,dino) and mother(wilma,dino)::NIL
upd' called for mother(Z,dino):mother(wilma,dino)
Attempting to re-pair Z and wilma
Upd called for Z and wilma
Comp called
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(Z,dino)
|Fact :           mother(wilma,dino)
|Fact after Subst:mother(wilma,dino)
|List of Facts Remainingmother(Z,_Z2)
|After substitutions:mother(wilma,_Z2)
|Since our list isn't empty, we aren't done yet!
|Moving to the next term:                       
Checker called, mother(Z,dino)  mother(Z,_Z2)
Trying to call unify on factmother(wilma,_Z2)|father(fred,rocky)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,dino)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(fred,pebbles)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(barney,bambam)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,scooby)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(bambam,shaggy)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|father(rocky,dafney)
Still trying to unify this query -- Moving to the next thing in the database
Trying to call unify on factmother(wilma,_Z2)|mother(wilma,pebbles)
Upd called for _Z2 and pebbles
Comp called
Unify was successful for mother(wilma,_Z2) and mother(wilma,pebbles)::NIL
upd' called for mother(wilma,_Z2):mother(wilma,pebbles)
Attempting to re-pair _Z2 and pebbles
Upd called for _Z2 and pebbles
Comp called
Comp called
Comp called
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           mother(wilma,pebbles)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(rocky,dafney)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about our query
|Query:           mother(wilma,_Z2)
|Fact :           father(bambam,shaggy)
|Fact after Subst:mother(wilma,pebbles)
|List of Facts Remaining
|After substitutions:
End of y list
|We've got a query! Since the headed clause had no tail, we know that we have a fact
|Facts about o